// Grid system
@use 'variables' as vars;
@use 'sass:math';

// Grid mixins
@mixin make-col-ready() {
    position: relative;
    padding-right: math.div(vars.$grid-gutter-width, 2);
    padding-left: math.div(vars.$grid-gutter-width, 2);
}

@mixin make-col($size) {
    flex: 0 0 math.percentage(math.div($size, vars.$grid-columns));
    max-width: math.percentage(math.div($size, vars.$grid-columns));
}

@mixin make-col-auto() {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
}

// Grid classes
.container,
.container-fluid {
    width: 100%;
    padding-right: -#{math.div(vars.$grid-gutter-width, 2)};
    padding-left: -#{math.div(vars.$grid-gutter-width, 2)};
    margin-right: auto;
    margin-left: auto;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-right: math.div(vars.$grid-gutter-width, 2);
    margin-left: math.div(vars.$grid-gutter-width, 2);
}

.no-gutters {
    margin-right: 0;
    margin-left: 0;

    > .col,
    > [class*="col-"] {
        padding-right: 0;
        padding-left: 0;
    }
}

.col {
    @include make-col-ready();
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
}

@for $i from 1 through vars.$grid-columns {
    .col-#{$i} {
        @include make-col-ready();
        @include make-col($i);
    }
}

.col-auto {
    @include make-col-ready();
    @include make-col-auto();
}
